<%- include ('../admin/partials/header') -%>
<link rel="stylesheet" type="text/css" href="/stylesheets/courseMappingStyle.css">

<div class="container-fluid mt-2">

    <div class="row">

        <div class="col-12">
            <h3>Course Mapping</h3>
            <hr class="my-4">
        </div>

        <div class="col-12" style=" margin-top: -2%;">
            <div class="row justify-content-md-left">
                <div class="col-md-8">
                    <label for="study_program" style="width: auto;"> Select</label>
                    <select id="study_program" type="text" name="study_program" required>
                        <% if (selected_program == 0) { %>
                        <option selected disabled value=""> -- Study Program -- </option>
                        <% } %>
                        <% study_programs.forEach(element => { %>
                        <% if (selected_program == element["prog_ID"]) { %>
                        <option class="dropdown-item" selected value="<%= element["prog_ID"] %>">
                            <%=element["prog_name"] %>
                        </option>
                        <%=element["prog_name"] %>
                        <% } else {%>
                        <option class="dropdown-item" value="<%= element["prog_ID"] %>">
                            <%=element["prog_name"] %>
                        </option>
                        <% } %>
                        <% }) %>
                    </select>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <div class="text-right">
        <button style="width: 20%;" id="clickme" class="btn btn-primary invisible"> Submit</button>
    </div>
</div>

<div id="tableDiv">

</div>

<!-- <div class="container-fluid my-2 " style="overflow-y: scroll;height: 400px;width: 100%;"> -->
<div class="container-fluid my-2 " style="font-size: 0.9em;">

    <table class="table table-bordered table-striped">
        <thead class="thead-dark">
            <!-- HEADER -->
        </thead>

        <tbody id="filter">

        </tbody>

    </table>
    <hr class="my-1">
</div>

<%- include ('../admin/partials/modal_success') -%>

<script>
    $(document).ready(function () {
        var previus_val = undefined;
        let pair = undefined;

        $("#clickme").click(function () {

            let selected = [];
            $('.rowCheckBox input:checked').each(function () {
                pair = $(this).val().trim().split(",");
                selected.push(pair);
            });
            let all_courses = selected.map(e => e[1]);

            // remove duplicates outcomes
            all_courses = all_courses.filter(function (item, pos) {
                return all_courses.indexOf(item) == pos;
            });

            let temp = [];
            let arr = [];
            all_courses.forEach(ID => {
                for (let i = 0; i < selected.length; i++) {
                    if (selected[i][1] == ID) {
                        temp.push(selected[i][0]);
                    }
                }
                arr.push({ "course_id": ID, "outcomes": temp, "isNew": true });
                temp = [];
            });
            previus_val.sort((a, b) => (a.course_id > b.course_id) ? 1 : -1);
            arr.sort((a, b) => (a.course_id > b.course_id) ? 1 : -1);

            // COMPARING BOTH DT - TO UPDATE OR ELIMINATE THE CHECKBOX SELECTED
            let update_data = [];
            let found = false;
            previus_val.forEach(past => {
                found = false;
                arr.forEach(present => {
                    let to_update = undefined;

                    // verify is both have the same course_id selected
                    if (past.course_id == present.course_id) {
                        present.isNew = false;
                        to_update = get_data_for_update(past["outcomes"], present["outcomes"]);
                        update_data.push({ "course_id": past.course_id, "update": to_update });
                        found = true;
                    }
                });

                if (!found) {
                    to_update = get_data_for_update(past["outcomes"], []);
                    update_data.push({ "course_id": past.course_id, "update": to_update });
                }
            });

            // for new values to add, new course to evaluate
            let new_values = arr.filter(e => e.isNew);

            new_values.forEach(e => {
                to_update = get_data_for_update([], e["outcomes"]);
                update_data.push({ "course_id": e.course_id, "update": to_update });
            });

            console.log("PREVIUS VALUE: ", previus_val);
            console.log("CURRENT VALUE:", arr);
            console.log("NEW VALUES: ", update_data);

            $.ajax({
                type: "POST",
                url: '/admin/courseMapping/addMapping',
                data: {
                    data: update_data
                },
                dataType: 'json',
                success: function (response) {
                    // console.log(response);
                    if (response != undefined && response.status == 200) {

                        // RESET EVERYTHING
                        let id = $("#study_program").val();
                        $("#study_program").val("").change();
                        $("#study_program").val(id).change();

                        let msgTitle;
                        let msgBody;
                        if (response.wasUpdated){
                            msgTitle = "Success";
                            msgBody = "Mapping was successfully updated!";
                        }else{
                            msgTitle = "Feedback";
                            msgBody = "You dit not change any value!";
                        }

                        $("#modalTitle").text(msgTitle);
                        $("#modalMessage").text(msgBody)
                        $('#view_performances').modal('toggle');
                        // $('#myModal').modal('show');
                        // $('#myModal').modal('hide');

                        // $(location).attr('href', `/courseMapping/test?progID=${id}`);
                        // location.reload(true);
                    }
                },
                error: function () {
                    location.reload(true);
                    $("#modalTitle").text("Error");
                    $("#modalMessage").text("There is an error updating the mapping");
                    $('#view_performances').modal('toggle');
                }
            });
        });

        $("#study_program").change(function () {
            $("#clickme").removeClass("invisible");

            let id = $(this).val();
            $.ajax({
                'url': `/admin/api/courseMapping/get/${id}`,
                type: 'GET',
                dataType: 'json',
                success: (data) => {

                    // console.log(data);
                    previus_val = data.current_mapping;
                    let mapping = data.mapping[0];

                    let selected_mapping = data.outcome_course;

                    // create the header table
                    create_header(mapping);

                    //create the body of table
                    create_body(mapping, selected_mapping);
                }
            });
        });
    });


    /**
     * validate_form 
     * @param {Array} current current department the user have
     * @param {Array} selected_for_update actual department the user should have
     * @return {Object} Object of array for "delete" and "insert"
     */
    function get_data_for_update(current, selected_for_update) {

        // if (current == undefined  || selected_for_update == undefined || selected_for_update.length == 0){
        // 	return undefined;
        // }

        for (let i = 0; i < current.length; i++) {
            for (let j = 0; j < selected_for_update.length; j++) {
                if (current[i] == selected_for_update[j]) {
                    current.splice(i, 1);
                    selected_for_update.splice(j, 1);
                    i--;
                    j--;
                }
            }
        }
        return { "delete": current || [], "insert": selected_for_update || [] }
    }

    /**
     * Ceate_header -> create the header for the table
     * @param {Object} mapping -> all data for outcome 
     */
    function create_body(mapping, current_selected) {
       
        console.log("CURRENT: ", current_selected);
        //clean the body
        $("#filter").empty();
        if (mapping == undefined || mapping["outcomes"].length == 0) {
            return;
        }
        let courses = mapping["courses"];
        let outcomes = mapping["outcomes"];

        //clean the body
        $("#filter").empty();

        // Create a loop to iter for the courses names
        for (let i = 0; i < courses["names"].length; i++) {
            let str = "";

            // COURSE NAME
            str += `<tr class='rowCheckBox'> <th> ${courses["names"][i]}</th>`;

            // iter through the checkbox
            for (let j = 0; j < outcomes["names"].length; j++) {
                // CHECKBOX
                str += `
                <td style="text-align: center; padding: 1%;" scope="col">
                    <input type="checkbox" value="${outcomes["ids"][j]},${courses["ids"][i]}"
                        style="top: .8rem; width: 1.25rem; height: 1.25rem;">
                </td>`;
            }
            // end
            str += "</tr";
            $("#filter").append(str);
        }

        //  check the values with the value specified
        current_selected.forEach(e => {
            $(`input[value='${e}']`).attr("checked", "checked");
        });
    }

    /**
     * Ceate_header -> create the header for the table
     * @param {Object} mapping -> all data for outcome 
     */
    function create_header(mapping) {
        $(".thead-dark").empty()

        if (mapping == undefined || mapping["outcomes"] == undefined || mapping["outcomes"].length == 0) {
            $("#tableDiv").append(`<h3 style="text-align: center;">THERE IS NOT OUTCOME FOR THIS STUDY PROGRAM</h3>`);
            return;
        }
        let outcomes = mapping["outcomes"];

        $(".thead-dark").append("<tr>");
        $(".thead-dark").append(`<th style="text-align: center;" scope="col">COURSES</th>`);
        outcomes["names"].forEach(element => {
            $(".thead-dark").append(`<th style="text-align: center;" scope="col">${element}</th>`)
        });
        $(".thead-dark").append("</tr>");
        $("#tableDiv").empty()
    }

</script>


<div class="container-fluid">
    <hr class="mt-5">
    <p>&copy; 2019 - Universidad Interamericana de Puerto Rico - Bayam&oacute;n Campus</p>
</div>

<!-- LOADING JQUERY -->
<script src="https://code.jquery.com/jquery-3.4.1.js" integrity="sha256-WpOohJOqMqqyKL9FccASB9O0KwACQJpFTUBLTYOVvVU="
    crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.0/jquery.validate.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"
    integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1"
    crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"
    integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM"
    crossorigin="anonymous"></script>

</body>

</html>
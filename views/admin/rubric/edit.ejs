<%- include ('../../partials/header', {signInUrl: signInUrl, signOutUrl: signOutUrl}) -%>

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="<%=homeURL%>">Home</a></li>
        <% for( let index = 0; index < breadcrumb.length; index++ ) { %>

        <% if (index == breadcrumb.length -1) { %>
        <li class="breadcrumb-item active" aria-current="page"><%= breadcrumb[index].name %></li>
        <% }else { %>
        <li class="breadcrumb-item">
            <a href="<%= breadcrumb[index].url %>">
                <%= breadcrumb[index].name %>
            </a>
        </li>
        <% } %>

        <% } %>
    </ol>
</nav>
<div class="container-fluid">
    <h2>Edit Evaluation Rubric</h2>
    <hr class="my-4">

    <form id="<%= form_id %>" action="<%= url_form_redirect %>" method="POST">

        <div class="container-fluid">
            <div class="row my-4">
                <div class="col-2 align-self-center text-right"><strong>Study Programs</strong></div>
                <div class="col-8">
                    <select id="study_program" type="text" name="study_program" required>
                        <% for (let std of std_options) {%>
                        <% if (std.ID == study_program_id) {%>
                        <option selected value="<%=std.ID%>"><%= std.NAME %></option>
                        <% }else {%>
                        <option class="dropdown-item" value="<%=std.ID%>"> <%= std.NAME%> </option>
                        <% } %>
                        <% } %>
                    </select>
                </div>
            </div>
        </div>

        <div class="container-fluid">
            <div class="row my-4">
                <div class="col-2 align-self-center text-right"><strong>Outcomes</strong></div>
                <div class="col-8 ">
                    <select id="outcomes" type="text" name="outcome" required>

                        <% for (let outc of outcomes) {%>
                        <% if (outc.ID == outcome_selected) {%>
                        <option selected value="<%=outc.ID%>"><%= outc.NAME %></option>
                        <% }else {%>
                        <option class="dropdown-item" value="<%=outc.ID%>"> <%= outc.NAME%> </option>
                        <% } %>
                        <% } %>
                    </select>
                </div>
            </div>
        </div>

        <div class="row my-4">
            <div class="col-2 align-self-center text-right"><strong>Performance Criteria</strong></div>
            <div id="multi_selection" class="col-8">
                <span class="multi-select"></span>
                <span class="multi-select2"></span>
            </div>
            <input id="multiple_performance" type="hidden" name="performances_id" value="<%=criterias_selected%>">
            <input type="hidden" name="previus_performances_id" value="<%=criterias_selected%> ">

            <script>
                let criterias = <%- JSON.stringify(criteria) %>;
                let criterias_selected = <%- JSON.stringify(criterias_selected) %>;
            </script>
        </div>

        <% inputs.forEach(element => { %>

        <div class="row my-4">
            <div class="col-2 align-self-center text-right"><strong><%= element.title %> </strong></div>
            <div class="col-8">
                <input class="form-control" value="<%= element.value %>" type="text"
                    placeholder="<%= element.placeHolder %>" name="<%= element.name %>">
            </div>
        </div>
        <% }) %>

        <% if (description_box != undefined) { %>

        <div class="row my-4">
            <div class="col-2 align-self-center text-right"><strong>Description</strong></div>
            <div class="col-8">
                <textarea class="form-control" name="<%= description_box["name"]%>" rows="4"
                    placeholder="<%=description_box["text"]%>"><%= description_box["value"]%></textarea>
            </div>
        </div>
        <% } %>

        <div class="row my-4">
            <div class="col-2"></div>
            <div class="col-6">
                <button type="submit" id="saveEvaluationRubric" name="isSave" class="btn btn-success" value="save">
                    Edit Evaluation Rubric
                </button>
            </div>

            <div class="col">
                <button type="submit" id="finishEvaluationRubric" name="isFinal" value="isFinal"
                    class="btn btn-warning">
                    Finish Evaluation Rubric
                </button>
            </div>
        </div>

        <p><a href="<%= base_url %> ">Back to List</a></p>
    </form>
</div>

<%- include ('../../partials/modal_feedback') -%>


<script>

    const tag_btn_save = "#saveEvaluationRubric";
    const tag_btn_finish = "#finishEvaluationRubric";
    const tag_modal_feedback = "#feedbackContainer";
    const tag_modal_save = "#feedbackSave";
    const tag_modal_close = "#feedbackClose";
    const tag_form_id = "#rubric_data";

    $(document).ready(() => {

        $(tag_btn_finish).click(function(e){
            e.preventDefault();
            
            $("#feedbackTitle").text("Finishing Rubric").css({"color": "red"});
            
            $("#feedbackBody").text("When you finish an Evaluation Rubric the information is stored and you CAN NOT edit it or delete it anymore.");
            
            $(tag_modal_save).text("Finish Evaluation Rubric").css({"display": "block"}).removeClass("btn-success").addClass("btn-warning");

            $(tag_modal_feedback).modal("show");
        });

        // user click save
        $(tag_modal_save).click(function(){
            $(tag_form_id).submit();
            $(tag_modal_feedback).modal("hide");
        });

        var multi = new SelectPure(".multi-select2", {
            options: criterias,
            value: criterias_selected,
            multiple: true,
            icon: "fa fa-times",
            placeholder: "-- Please Select --",
            onChange: value => { },
            classNames: {
                select: "select-pure__select",
                dropdownShown: "select-pure__select--opened",
                multiselect: "select-pure__select--multiple",
                label: "select-pure__label",
                placeholder: "select-pure__placeholder",
                dropdown: "select-pure__options",
                option: "select-pure__option",
                selectedLabel: "select-pure__selected-label",
                selectedOption: "select-pure__option--selected",
                placeholderHidden: "select-pure__placeholder--hidden",
                optionHidden: "select-pure__option--hidden",
            }
        });

        $('#multi_selection').bind("DOMSubtreeModified", function () {
            let values = [];
            $(".fa-times").each(function () {
                $.each(this.attributes, function () {

                    if (this.name.includes("data") || this.name.includes("value")) {
                        values.push(this.value);
                    }
                });
            });
            $("#multiple_performance").attr("value", values);
            return;
        });


        // change the data when user select study program
        $("#study_program").change(async function () {

            // clean outcomes data
            $('#outcomes').empty().append('<option disabled selected value> -- Select Outcome -- </option>');
            $('#multi_selection').empty().append('<option disabled selected value> -- Please, Select Outcome -- </option>');

            // get the selected id of the study program to make the request
            var study_program_id = $(this).children("option:selected").val();

            let outcomes = await make_request(`/api/get/outcomesByStudyProgramID/${study_program_id}`).catch((err) => {
                console.log("Error getting outcomes");
            });

            if (outcomes == undefined || outcomes.length == 0) {
                alert("cannot find the outcomes");
                return;
            }

            // populate the options
            outcomes.forEach(element => {
                $('#outcomes').append(`<option value='${element.value}'>${element.name}</option>`);
            });
        });

        // add performance Rubric

        // change the data when user select study program
        $("#outcomes").change(async function () {

            mult = [];

            // clean performance data
            $('#performance').empty().append('<option disabled selected value> -- Please Select -- </option>');

            // get the selected id of the outcome to make the request
            var outcome_id = $(this).children("option:selected").val();


            let performances = await make_request(`/api/get/performancesByOutcome/${outcome_id}`).catch((err) => {
                console.log("Sorry, Cannot find the performances");
            });

            if (performances == undefined || performances.length == 0) {
                alert("Sorry, Cannot find the performances criteria...");
                return;
            }

            $(".multi-select2").remove();
            $("#multi_selection").empty();
            $("#multi_selection").append(`<span class="multi-select"></span>`);

            let mult_values = [];
            // populate the options
            performances.forEach(element => {
                mult_values.push({ label: element.name, value: element.value.toString() })
            });

            var multi = new SelectPure(".multi-select", {
                options: mult_values,
                value: [],
                multiple: true,
                icon: "fa fa-times",
                placeholder: "-- Please Select --",
                onChange: value => { },
                classNames: {
                    select: "select-pure__select",
                    dropdownShown: "select-pure__select--opened",
                    multiselect: "select-pure__select--multiple",
                    label: "select-pure__label",
                    placeholder: "select-pure__placeholder",
                    dropdown: "select-pure__options",
                    option: "select-pure__option",
                    selectedLabel: "select-pure__selected-label",
                    selectedOption: "select-pure__option--selected",
                    placeholderHidden: "select-pure__placeholder--hidden",
                    optionHidden: "select-pure__option--hidden",
                }
            });

        });
    });
</script>

<link rel="stylesheet" type="text/css" href="/stylesheets/multiselect.css">
<%- include ('../../partials/footer') -%>